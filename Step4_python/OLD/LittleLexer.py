# Generated from Little.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2*")
        buf.write("\u0177\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\3\2\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\5\3\5\3")
        buf.write("\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b")
        buf.write("\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13")
        buf.write("\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\23\3\23")
        buf.write("\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\32\3\32")
        buf.write("\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36")
        buf.write("\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3")
        buf.write(" \3 \3!\7!\u00d7\n!\f!\16!\u00da\13!\3!\3!\6!\u00de\n")
        buf.write("!\r!\16!\u00df\3\"\6\"\u00e3\n\"\r\"\16\"\u00e4\3#\3#")
        buf.write("\7#\u00e9\n#\f#\16#\u00ec\13#\3#\3#\3$\3$\3$\3$\7$\u00f4")
        buf.write("\n$\f$\16$\u00f7\13$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%")
        buf.write("\3%\3%\3%\5%\u0107\n%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\3&\5&\u0161\n&\3\'\3\'\7\'\u0165\n\'\f\'")
        buf.write("\16\'\u0168\13\'\3(\6(\u016b\n(\r(\16(\u016c\3(\3(\3)")
        buf.write("\5)\u0172\n)\3)\3)\5)\u0176\n)\4\u00ea\u00f5\2*\3\3\5")
        buf.write("\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33")
        buf.write("\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32")
        buf.write("\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*\3\2")
        buf.write("\b\3\2\62;\6\2,-//\61\61??\6\2*+..=>@@\3\2C|\4\2\62;C")
        buf.write("|\4\2\13\f\"\"\2\u0196\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2")
        buf.write("\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2")
        buf.write("\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2")
        buf.write("\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!")
        buf.write("\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\3S\3\2\2\2\5[\3\2\2\2\7a\3\2\2\2\te\3")
        buf.write("\2\2\2\13l\3\2\2\2\ro\3\2\2\2\17q\3\2\2\2\21w\3\2\2\2")
        buf.write("\23{\3\2\2\2\25\u0080\3\2\2\2\27\u0082\3\2\2\2\31\u008b")
        buf.write("\3\2\2\2\33\u008d\3\2\2\2\35\u008f\3\2\2\2\37\u0094\3")
        buf.write("\2\2\2!\u009a\3\2\2\2#\u00a1\3\2\2\2%\u00a3\3\2\2\2\'")
        buf.write("\u00a5\3\2\2\2)\u00a7\3\2\2\2+\u00a9\3\2\2\2-\u00ac\3")
        buf.write("\2\2\2/\u00b2\3\2\2\2\61\u00b7\3\2\2\2\63\u00b9\3\2\2")
        buf.write("\2\65\u00bb\3\2\2\2\67\u00bd\3\2\2\29\u00c0\3\2\2\2;\u00c3")
        buf.write("\3\2\2\2=\u00c6\3\2\2\2?\u00cc\3\2\2\2A\u00d8\3\2\2\2")
        buf.write("C\u00e2\3\2\2\2E\u00e6\3\2\2\2G\u00ef\3\2\2\2I\u0106\3")
        buf.write("\2\2\2K\u0160\3\2\2\2M\u0162\3\2\2\2O\u016a\3\2\2\2Q\u0175")
        buf.write("\3\2\2\2ST\7R\2\2TU\7T\2\2UV\7Q\2\2VW\7I\2\2WX\7T\2\2")
        buf.write("XY\7C\2\2YZ\7O\2\2Z\4\3\2\2\2[\\\7D\2\2\\]\7G\2\2]^\7")
        buf.write("I\2\2^_\7K\2\2_`\7P\2\2`\6\3\2\2\2ab\7G\2\2bc\7P\2\2c")
        buf.write("d\7F\2\2d\b\3\2\2\2ef\7U\2\2fg\7V\2\2gh\7T\2\2hi\7K\2")
        buf.write("\2ij\7P\2\2jk\7I\2\2k\n\3\2\2\2lm\7<\2\2mn\7?\2\2n\f\3")
        buf.write("\2\2\2op\7=\2\2p\16\3\2\2\2qr\7H\2\2rs\7N\2\2st\7Q\2\2")
        buf.write("tu\7C\2\2uv\7V\2\2v\20\3\2\2\2wx\7K\2\2xy\7P\2\2yz\7V")
        buf.write("\2\2z\22\3\2\2\2{|\7X\2\2|}\7Q\2\2}~\7K\2\2~\177\7F\2")
        buf.write("\2\177\24\3\2\2\2\u0080\u0081\7.\2\2\u0081\26\3\2\2\2")
        buf.write("\u0082\u0083\7H\2\2\u0083\u0084\7W\2\2\u0084\u0085\7P")
        buf.write("\2\2\u0085\u0086\7E\2\2\u0086\u0087\7V\2\2\u0087\u0088")
        buf.write("\7K\2\2\u0088\u0089\7Q\2\2\u0089\u008a\7P\2\2\u008a\30")
        buf.write("\3\2\2\2\u008b\u008c\7*\2\2\u008c\32\3\2\2\2\u008d\u008e")
        buf.write("\7+\2\2\u008e\34\3\2\2\2\u008f\u0090\7T\2\2\u0090\u0091")
        buf.write("\7G\2\2\u0091\u0092\7C\2\2\u0092\u0093\7F\2\2\u0093\36")
        buf.write("\3\2\2\2\u0094\u0095\7Y\2\2\u0095\u0096\7T\2\2\u0096\u0097")
        buf.write("\7K\2\2\u0097\u0098\7V\2\2\u0098\u0099\7G\2\2\u0099 \3")
        buf.write("\2\2\2\u009a\u009b\7T\2\2\u009b\u009c\7G\2\2\u009c\u009d")
        buf.write("\7V\2\2\u009d\u009e\7W\2\2\u009e\u009f\7T\2\2\u009f\u00a0")
        buf.write("\7P\2\2\u00a0\"\3\2\2\2\u00a1\u00a2\7-\2\2\u00a2$\3\2")
        buf.write("\2\2\u00a3\u00a4\7/\2\2\u00a4&\3\2\2\2\u00a5\u00a6\7,")
        buf.write("\2\2\u00a6(\3\2\2\2\u00a7\u00a8\7\61\2\2\u00a8*\3\2\2")
        buf.write("\2\u00a9\u00aa\7K\2\2\u00aa\u00ab\7H\2\2\u00ab,\3\2\2")
        buf.write("\2\u00ac\u00ad\7G\2\2\u00ad\u00ae\7P\2\2\u00ae\u00af\7")
        buf.write("F\2\2\u00af\u00b0\7K\2\2\u00b0\u00b1\7H\2\2\u00b1.\3\2")
        buf.write("\2\2\u00b2\u00b3\7G\2\2\u00b3\u00b4\7N\2\2\u00b4\u00b5")
        buf.write("\7U\2\2\u00b5\u00b6\7G\2\2\u00b6\60\3\2\2\2\u00b7\u00b8")
        buf.write("\7>\2\2\u00b8\62\3\2\2\2\u00b9\u00ba\7@\2\2\u00ba\64\3")
        buf.write("\2\2\2\u00bb\u00bc\7?\2\2\u00bc\66\3\2\2\2\u00bd\u00be")
        buf.write("\7#\2\2\u00be\u00bf\7?\2\2\u00bf8\3\2\2\2\u00c0\u00c1")
        buf.write("\7>\2\2\u00c1\u00c2\7?\2\2\u00c2:\3\2\2\2\u00c3\u00c4")
        buf.write("\7@\2\2\u00c4\u00c5\7?\2\2\u00c5<\3\2\2\2\u00c6\u00c7")
        buf.write("\7Y\2\2\u00c7\u00c8\7J\2\2\u00c8\u00c9\7K\2\2\u00c9\u00ca")
        buf.write("\7N\2\2\u00ca\u00cb\7G\2\2\u00cb>\3\2\2\2\u00cc\u00cd")
        buf.write("\7G\2\2\u00cd\u00ce\7P\2\2\u00ce\u00cf\7F\2\2\u00cf\u00d0")
        buf.write("\7Y\2\2\u00d0\u00d1\7J\2\2\u00d1\u00d2\7K\2\2\u00d2\u00d3")
        buf.write("\7N\2\2\u00d3\u00d4\7G\2\2\u00d4@\3\2\2\2\u00d5\u00d7")
        buf.write("\t\2\2\2\u00d6\u00d5\3\2\2\2\u00d7\u00da\3\2\2\2\u00d8")
        buf.write("\u00d6\3\2\2\2\u00d8\u00d9\3\2\2\2\u00d9\u00db\3\2\2\2")
        buf.write("\u00da\u00d8\3\2\2\2\u00db\u00dd\7\60\2\2\u00dc\u00de")
        buf.write("\t\2\2\2\u00dd\u00dc\3\2\2\2\u00de\u00df\3\2\2\2\u00df")
        buf.write("\u00dd\3\2\2\2\u00df\u00e0\3\2\2\2\u00e0B\3\2\2\2\u00e1")
        buf.write("\u00e3\t\2\2\2\u00e2\u00e1\3\2\2\2\u00e3\u00e4\3\2\2\2")
        buf.write("\u00e4\u00e2\3\2\2\2\u00e4\u00e5\3\2\2\2\u00e5D\3\2\2")
        buf.write("\2\u00e6\u00ea\7$\2\2\u00e7\u00e9\13\2\2\2\u00e8\u00e7")
        buf.write("\3\2\2\2\u00e9\u00ec\3\2\2\2\u00ea\u00eb\3\2\2\2\u00ea")
        buf.write("\u00e8\3\2\2\2\u00eb\u00ed\3\2\2\2\u00ec\u00ea\3\2\2\2")
        buf.write("\u00ed\u00ee\7$\2\2\u00eeF\3\2\2\2\u00ef\u00f0\7/\2\2")
        buf.write("\u00f0\u00f1\7/\2\2\u00f1\u00f5\3\2\2\2\u00f2\u00f4\13")
        buf.write("\2\2\2\u00f3\u00f2\3\2\2\2\u00f4\u00f7\3\2\2\2\u00f5\u00f6")
        buf.write("\3\2\2\2\u00f5\u00f3\3\2\2\2\u00f6\u00f8\3\2\2\2\u00f7")
        buf.write("\u00f5\3\2\2\2\u00f8\u00f9\7\f\2\2\u00f9\u00fa\3\2\2\2")
        buf.write("\u00fa\u00fb\b$\2\2\u00fbH\3\2\2\2\u00fc\u00fd\7<\2\2")
        buf.write("\u00fd\u0107\7?\2\2\u00fe\u0107\t\3\2\2\u00ff\u0100\7")
        buf.write("#\2\2\u0100\u0107\7?\2\2\u0101\u0107\t\4\2\2\u0102\u0103")
        buf.write("\7>\2\2\u0103\u0107\7?\2\2\u0104\u0105\7@\2\2\u0105\u0107")
        buf.write("\7?\2\2\u0106\u00fc\3\2\2\2\u0106\u00fe\3\2\2\2\u0106")
        buf.write("\u00ff\3\2\2\2\u0106\u0101\3\2\2\2\u0106\u0102\3\2\2\2")
        buf.write("\u0106\u0104\3\2\2\2\u0107J\3\2\2\2\u0108\u0109\7R\2\2")
        buf.write("\u0109\u010a\7T\2\2\u010a\u010b\7Q\2\2\u010b\u010c\7I")
        buf.write("\2\2\u010c\u010d\7T\2\2\u010d\u010e\7C\2\2\u010e\u0161")
        buf.write("\7O\2\2\u010f\u0110\7D\2\2\u0110\u0111\7G\2\2\u0111\u0112")
        buf.write("\7I\2\2\u0112\u0113\7K\2\2\u0113\u0161\7P\2\2\u0114\u0115")
        buf.write("\7G\2\2\u0115\u0116\7P\2\2\u0116\u0161\7F\2\2\u0117\u0118")
        buf.write("\7H\2\2\u0118\u0119\7W\2\2\u0119\u011a\7P\2\2\u011a\u011b")
        buf.write("\7E\2\2\u011b\u011c\7V\2\2\u011c\u011d\7K\2\2\u011d\u011e")
        buf.write("\7Q\2\2\u011e\u0161\7P\2\2\u011f\u0120\7T\2\2\u0120\u0121")
        buf.write("\7G\2\2\u0121\u0122\7C\2\2\u0122\u0161\7F\2\2\u0123\u0124")
        buf.write("\7Y\2\2\u0124\u0125\7T\2\2\u0125\u0126\7K\2\2\u0126\u0127")
        buf.write("\7V\2\2\u0127\u0161\7G\2\2\u0128\u0129\7K\2\2\u0129\u0161")
        buf.write("\7H\2\2\u012a\u012b\7G\2\2\u012b\u012c\7N\2\2\u012c\u012d")
        buf.write("\7U\2\2\u012d\u0161\7G\2\2\u012e\u012f\7H\2\2\u012f\u0161")
        buf.write("\7K\2\2\u0130\u0131\7H\2\2\u0131\u0132\7Q\2\2\u0132\u0161")
        buf.write("\7T\2\2\u0133\u0134\7T\2\2\u0134\u0135\7Q\2\2\u0135\u0161")
        buf.write("\7H\2\2\u0136\u0137\7T\2\2\u0137\u0138\7G\2\2\u0138\u0139")
        buf.write("\7V\2\2\u0139\u013a\7W\2\2\u013a\u013b\7T\2\2\u013b\u0161")
        buf.write("\7P\2\2\u013c\u013d\7K\2\2\u013d\u013e\7P\2\2\u013e\u0161")
        buf.write("\7V\2\2\u013f\u0140\7X\2\2\u0140\u0141\7Q\2\2\u0141\u0142")
        buf.write("\7K\2\2\u0142\u0161\7F\2\2\u0143\u0144\7U\2\2\u0144\u0145")
        buf.write("\7V\2\2\u0145\u0146\7T\2\2\u0146\u0147\7K\2\2\u0147\u0148")
        buf.write("\7P\2\2\u0148\u0161\7I\2\2\u0149\u014a\7H\2\2\u014a\u014b")
        buf.write("\7N\2\2\u014b\u014c\7Q\2\2\u014c\u014d\7C\2\2\u014d\u0161")
        buf.write("\7V\2\2\u014e\u014f\7Y\2\2\u014f\u0150\7J\2\2\u0150\u0151")
        buf.write("\7K\2\2\u0151\u0152\7N\2\2\u0152\u0161\7G\2\2\u0153\u0154")
        buf.write("\7G\2\2\u0154\u0155\7P\2\2\u0155\u0156\7F\2\2\u0156\u0157")
        buf.write("\7K\2\2\u0157\u0161\7H\2\2\u0158\u0159\7G\2\2\u0159\u015a")
        buf.write("\7P\2\2\u015a\u015b\7F\2\2\u015b\u015c\7Y\2\2\u015c\u015d")
        buf.write("\7J\2\2\u015d\u015e\7K\2\2\u015e\u015f\7N\2\2\u015f\u0161")
        buf.write("\7G\2\2\u0160\u0108\3\2\2\2\u0160\u010f\3\2\2\2\u0160")
        buf.write("\u0114\3\2\2\2\u0160\u0117\3\2\2\2\u0160\u011f\3\2\2\2")
        buf.write("\u0160\u0123\3\2\2\2\u0160\u0128\3\2\2\2\u0160\u012a\3")
        buf.write("\2\2\2\u0160\u012e\3\2\2\2\u0160\u0130\3\2\2\2\u0160\u0133")
        buf.write("\3\2\2\2\u0160\u0136\3\2\2\2\u0160\u013c\3\2\2\2\u0160")
        buf.write("\u013f\3\2\2\2\u0160\u0143\3\2\2\2\u0160\u0149\3\2\2\2")
        buf.write("\u0160\u014e\3\2\2\2\u0160\u0153\3\2\2\2\u0160\u0158\3")
        buf.write("\2\2\2\u0161L\3\2\2\2\u0162\u0166\t\5\2\2\u0163\u0165")
        buf.write("\t\6\2\2\u0164\u0163\3\2\2\2\u0165\u0168\3\2\2\2\u0166")
        buf.write("\u0164\3\2\2\2\u0166\u0167\3\2\2\2\u0167N\3\2\2\2\u0168")
        buf.write("\u0166\3\2\2\2\u0169\u016b\t\7\2\2\u016a\u0169\3\2\2\2")
        buf.write("\u016b\u016c\3\2\2\2\u016c\u016a\3\2\2\2\u016c\u016d\3")
        buf.write("\2\2\2\u016d\u016e\3\2\2\2\u016e\u016f\b(\2\2\u016fP\3")
        buf.write("\2\2\2\u0170\u0172\7\17\2\2\u0171\u0170\3\2\2\2\u0171")
        buf.write("\u0172\3\2\2\2\u0172\u0173\3\2\2\2\u0173\u0176\7\f\2\2")
        buf.write("\u0174\u0176\7\17\2\2\u0175\u0171\3\2\2\2\u0175\u0174")
        buf.write("\3\2\2\2\u0176R\3\2\2\2\17\2\u00d8\u00df\u00e4\u00ea\u00f5")
        buf.write("\u0106\u0160\u0164\u0166\u016c\u0171\u0175\3\b\2\2")
        return buf.getvalue()


class LittleLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    FLOATLITERAL = 32
    INTLITERAL = 33
    STRINGLITERAL = 34
    COMMENT = 35
    OPERATOR = 36
    KEYWORD = 37
    IDENTIFIER = 38
    WHITESPACE = 39
    NL = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'PROGRAM'", "'BEGIN'", "'END'", "'STRING'", "':='", "';'", 
            "'FLOAT'", "'INT'", "'VOID'", "','", "'FUNCTION'", "'('", "')'", 
            "'READ'", "'WRITE'", "'RETURN'", "'+'", "'-'", "'*'", "'/'", 
            "'IF'", "'ENDIF'", "'ELSE'", "'<'", "'>'", "'='", "'!='", "'<='", 
            "'>='", "'WHILE'", "'ENDWHILE'" ]

    symbolicNames = [ "<INVALID>",
            "FLOATLITERAL", "INTLITERAL", "STRINGLITERAL", "COMMENT", "OPERATOR", 
            "KEYWORD", "IDENTIFIER", "WHITESPACE", "NL" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "FLOATLITERAL", 
                  "INTLITERAL", "STRINGLITERAL", "COMMENT", "OPERATOR", 
                  "KEYWORD", "IDENTIFIER", "WHITESPACE", "NL" ]

    grammarFileName = "Little.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


